# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
image: registry.gitlab.com/freepascal.org/fpc/source:buster_fpcbuild
stages:
- compilercycle
- buildandtest
- test
compiler-fullcycle-job:
  stage: compilercycle
  script:
  - cd compiler
  - make fullcycle
build-and-test-job:
  stage: buildandtest
  script:
  - make -j 4 all OS_TARGET=linux CPU_TARGET=x86_64 FPMAKEOPT="-T 4"
  - FPC_SRC=$(pwd)
  - FPC_COMPILER=$FPC_SRC/compiler/ppcx64
  - cd tests
  - make clean TEST_FPC=$FPC_COMPILER TEST_DELTEMP=1 -j 4
  - make full TEST_FPC=$FPC_COMPILER TEST_DELTEMP=1 -j 4
  - cd utils
  - make fpts2junit
  - cd $FPC_SRC
  - tests/utils/fpts2junit $FPC_SRC/tests/output/x86_64-linux/ testresult.xml
  artifacts:
    when: always
    paths:
    - testresult.xml
    reports:
      junit: testresult.xml
sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
